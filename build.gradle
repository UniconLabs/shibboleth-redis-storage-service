import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
    id 'java'
    id 'idea'
    id 'distribution'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'com.avast.gradle.docker-compose' version '0.10.10'
    id 'net.researchgate.release' version '2.7.0'
    // id 'signing'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

repositories {
    maven { url 'https://build.shibboleth.net/nexus/content/groups/public' }
    jcenter()
}

dependencies {
    compileOnly "org.opensaml:opensaml-storage-api:${project.'opensaml.version'}"
    compileOnly "ch.qos.logback:logback-core:${project.'logback.version'}"

    implementation platform("net.shibboleth.idp:idp-parent:${project.'shibboleth.version'}")
    implementation platform("org.opensaml:opensaml-parent:${project.'opensaml.version'}")

    implementation "org.redisson:redisson:${project.'redisson.version'}", {
        exclude module: 'jackson-annotations'
        exclude module: 'jackson-core'
        exclude module: 'jackson-databind'
        exclude module: 'javassist'
        exclude module: 'slf4j-api'
    }

    testCompile "net.shibboleth.idp:idp-authn-api:${project.'shibboleth.version'}"
    testCompile "org.opensaml:opensaml-storage-api:${project.'opensaml.version'}:tests@jar"
    testCompile "junit:junit:4.12"
    testCompile "org.testng:testng:6.9.9"

    testRuntime 'com.fasterxml.jackson.core:jackson-core'
    testRuntime 'com.fasterxml.jackson.core:jackson-databind'
}

dockerCompose {
    useComposeFiles = ['./src/test/docker/docker-compose.yml']
    captureContainersOutput = true
    waitForTcpPorts = false
}

test {
    useTestNG()
    scanForTestClasses = false
    include 'net/unicon/iam/shibboleth/**/*'
    dependsOn 'composeUp'
    finalizedBy 'composeDown'
}

distributions {
    main {
        contents {
            duplicatesStrategy = 'exclude'
            into ('edit-webapp/WEB-INF/lib') {
                from { project.jar }
                from { project.configurations.runtimeClasspath }
            }
        }
    }
}

bintray {
    user = bintrayUsername
    key = bintrayAPIKey
    pkg {
        repo = 'generic'
        name = rootProject.name
        userOrg = 'uniconiam'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/UniconLabs/shibboleth-redis-storage-service.git'
        version {
            name = project.version
        }
        configurations = ['archives']
    }
}

afterReleaseBuild.dependsOn bintrayUpload

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = 'net.unicon.iam.shibboleth.storage.redis'
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

shadowJar {
    mergeServiceFiles()
    append('META-INF/spring.schemas')
    append('META-INF/spring.tooling')
    append('META-INF/spring.factories')
}

/*
signing {
    sign configurations.archives
}
 */
